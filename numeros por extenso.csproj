namespace numeros_por_extenso
{
   
        
using System;

class Program
{
    static string[] unidades = { "", "Um", "Dois", "Três", "Quatro", "Cinco", "Seis", "Sete", "Oito", "Nove" };
    static string[] teens = { "Dez", "Onze", "Doze", "Treze", "Catorze", "Quinze", "Dezesseis", "Dezessete", "Dezoito", "Dezenove" };
    static string[] dezenas = { "", "", "Vinte", "Trinta", "Quarenta", "Cinquenta", "Sessenta", "Setenta", "Oitenta", "Noventa" };
    static string[] centenas = { "", "Cem", "Duzentos", "Trezentos", "Quatrocentos", "Quinhentos", "Seiscentos", "Setecentos", "Oitocentos", "Novecentos" };

    static string ConverterNumeroPorExtenso(int numero)
    {
        if (numero == 0)
            return "Zero";

        if (numero < 0 || numero > 999)
            return "Fora do intervalo suportado";

        if (numero <= 9)
            return unidades[numero];

        if (numero <= 19)
            return teens[numero - 10];

        if (numero <= 99)
        {
            int dezena = numero / 10;
            int unidade = numero % 10;
            return $"{dezenas[dezena]} {unidades[unidade]}".Trim();
        }

        // Caso seja uma centena
        {
            int centena = numero / 100;
            int dezenaRestante = numero % 100;

            if (dezenaRestante == 0)
                return centenas[centena];

            return $"{centenas[centena]} e {ConverterNumeroPorExtenso(dezenaRestante)}";
        }
    }

    static void Main()
    {
        Console.Write("Digite um número (0 a 999): ");
        int numero = int.Parse(Console.ReadLine());

        string porExtenso = ConverterNumeroPorExtenso(numero);

        Console.WriteLine($"Número por extenso: {porExtenso}");

        Console.ReadLine(); // Aguarda o usuário pressionar Enter antes de fechar
    }
}
